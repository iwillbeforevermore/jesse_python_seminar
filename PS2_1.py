###########################
# Title: Electric Field   #
#       (Point Charge)    #
# Filename: PS2_1.py      #
# Author: Jesse Chang     #
###########################

# This script acts as a large complex calculator
#   for the field at the origin generated by a set
#   of arbitrarily located point charges

from math import sqrt, pi
#from const import E0
                                    ###note: was unable to import const module?
E0 = 8.854187817e-12

k = 1.0/(4*pi*E0)

def pointChargeField(charge, location): #charge is (location),(charge)
    #assign local variable names that make more sense
    locationX = location[0]
    locationY = location[1]
    locationZ = location[2]
    chargeX = charge[0]
    chargeY = charge[1]
    chargeZ = charge[2]
    chargeQ = charge[3]

    #calculate delta(x,y,z)
    rDiffX = locationX - chargeX
    rDiffY = locationY - chargeY
    rDiffZ = locationZ - chargeZ
    
    #calculate magnitude of r vector
    rMag = sqrt((rDiffX)**2 + (rDiffY)**2 + (rDiffZ)**2)

    #calculate components of electric field
    eX = chargeQ*k*rDiffX/(rMag**3)
    eY = chargeQ*k*rDiffY/(rMag**3)
    eZ = chargeQ*k*rDiffZ/(rMag**3)

    #vectorToString(eX,eY,eZ)

    #return values to make things easier later
    return (eX, eY, eZ)
    
#function to make vectors print nicely
def vectorToString(iComponent,jComponent,kComponent):
    print("("),(iComponent) , (")i + (") , (jComponent) , (")j + (") , (kComponent) , (")k N/C")


#test case
#pointChargeField((0,0,0,4*pi*E0),(1,0,0))
